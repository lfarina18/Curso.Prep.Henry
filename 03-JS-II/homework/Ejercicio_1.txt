1. En un archivo de texto separado que debes crear, escribe explicaciones de los siguientes conceptos como si se lo estuvieras explicando a un niño de 12 años. Hacer esto te ayudará a descubrir rápidamente cualquier agujero en tu comprensión.

* `for`
* `&&`, `||`, `!`

for:

El bucle for es una forma rápida y sencilla de hacer algo repetidamente.
Un ciclo for se repite hasta que una condición especificada se evalúe como false.

Una declaración for tiene el siguiente aspecto:

for ([expresiónInicial]; [expresiónCondicional]; [expresiónDeActualización])
  instrucción

En código se veria así:

for (let i = 0; i < 10; i++) {
    console.log(i);
}

    -   Se ejecuta la "expresiónInicial".
    -   Se evalúa la expresión expresiónCondicional. Si el valor   de expresiónCondicional es verdadero, se ejecutan las instrucciones del bucle. Si el valor de condición es falso, el bucle for termina.
    -   Se ejecuta la instrucción. Para ejecutar varias instrucciones, en el ejemplo solo utilizamos una.
    -   Si está presente, se ejecuta la expresión de actualización expresiónDeActualización.
    -   El control regresa al paso 2.

`&&`:
Es un operador lógico, significa "Y" ("AND"). 
Esto evaluará ambas expresiones y devolverá verdadero si AMBAS expresiones son `true`. Si uno (o ambos) de ellos es falso, este operador devolverá `false`

Ejemplo:
```javascript
if (100 > 10 && 10 === 10) {
    console.log('Ambas declaraciones son ciertas, este código se ejecutará');
}

if (10 === 9 && 10 > 9) {
    console.log('Una de las declaraciones es false, por lo que && devolverá false, y este código no se ejecutará');
}
```

`||`:
Es un operador lógico, significa "Ó" ("OR").
Determinará si una de las expresiones es `true`. Devolverá `true` si una (o ambas) de las expresiones es` true`. Devolverá `false` si AMBAS expresiones son` false`:

Ejemplo:
```javascript
if (100 > 10 || 10 === 10) {
    console.log('Ambas declaraciones son ciertas, este código se ejecutará');
}

if (10 === 9 || 10 > 9) {
    console.log('Una de las declaraciones es true, por lo que || devolverá true y este código se ejecutará');
}

if (10 === 9 || 1 > 9) {
    console.log('Ambas declaraciones son falsas, por lo que || devolverá false y este código no se ejecutará');
}
```

`!`:
Es un operador lógico, significa "NOT" ("NO").
El operador NOT devolverá el valor booleano opuesto de lo que se le pasa:
Ejemplo:
```javascript
if (!false) {
    console.log('El ! devolverá true, porque es lo contrario de false, así que ste código se ejecutará');
}

if (!(1 === 1)) {
    console.log('1 es igual a 1, de modo que la expresión devuelve true. El operador ! devolverá lo contrario de eso, por lo que este código NO se ejecutará');
}
```